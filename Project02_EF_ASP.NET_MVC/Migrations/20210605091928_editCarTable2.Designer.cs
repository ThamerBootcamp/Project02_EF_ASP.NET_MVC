// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project02_EF_ASP.NET_MVC.Data;

namespace Project02_EF_ASP.NET_MVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210605091928_editCarTable2")]
    partial class editCarTable2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Project02_EF_ASP.NET_MVC.Models.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("color")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manufacturer = "Audi",
                            Model = "1",
                            Type = "Passenger Van",
                            color = "grey"
                        },
                        new
                        {
                            Id = 2,
                            Manufacturer = "Chrysler",
                            Model = "2",
                            Type = "Passenger Van",
                            color = "teal"
                        },
                        new
                        {
                            Id = 3,
                            Manufacturer = "Maserati",
                            Model = "El Camino",
                            Type = "Sedan",
                            color = "lavender"
                        },
                        new
                        {
                            Id = 4,
                            Manufacturer = "Porsche",
                            Model = "Model T",
                            Type = "Sedan",
                            color = "yellow"
                        },
                        new
                        {
                            Id = 5,
                            Manufacturer = "Jaguar",
                            Model = "Challenger",
                            Type = "Passenger Van",
                            color = "fuchsia"
                        },
                        new
                        {
                            Id = 6,
                            Manufacturer = "Honda",
                            Model = "Explorer",
                            Type = "Passenger Van",
                            color = "violet"
                        },
                        new
                        {
                            Id = 7,
                            Manufacturer = "Aston Martin",
                            Model = "Focus",
                            Type = "Passenger Van",
                            color = "ivory"
                        },
                        new
                        {
                            Id = 8,
                            Manufacturer = "Toyota",
                            Model = "Spyder",
                            Type = "Sedan",
                            color = "salmon"
                        },
                        new
                        {
                            Id = 9,
                            Manufacturer = "Hyundai",
                            Model = "Countach",
                            Type = "Convertible",
                            color = "tan"
                        },
                        new
                        {
                            Id = 10,
                            Manufacturer = "BMW",
                            Model = "Impala",
                            Type = "Passenger Van",
                            color = "white"
                        });
                });

            modelBuilder.Entity("Project02_EF_ASP.NET_MVC.Models.CustomerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Project02_EF_ASP.NET_MVC.Models.StoreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("Project02_EF_ASP.NET_MVC.Models.CarModel", b =>
                {
                    b.HasOne("Project02_EF_ASP.NET_MVC.Models.StoreModel", "Store")
                        .WithMany("Cars")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("Project02_EF_ASP.NET_MVC.Models.CustomerModel", b =>
                {
                    b.HasOne("Project02_EF_ASP.NET_MVC.Models.CarModel", "Car")
                        .WithOne("Customer")
                        .HasForeignKey("Project02_EF_ASP.NET_MVC.Models.CustomerModel", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
